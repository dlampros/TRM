/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * GUI.java
 *
 * Created on 15 Ξ‘Ο€Ο� 2011, 4:33:22 ΞΌΞΌ
 */

package GUI;

import Controller.Controller;
import java.awt.event.ItemEvent;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeCellRenderer;


public class GUI extends javax.swing.JFrame {
	private static final long serialVersionUID = 1L;
	private Icon customIconEarth = new ImageIcon(getClass().getResource("/images/Earth.gif"));
    private Icon customIconPeople = new ImageIcon(getClass().getResource("/images/People.gif"));
    
    private DefaultTreeCellRenderer renderer1 = new DefaultTreeCellRenderer();
    private DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("Taxpayer");
    private Controller one = new Controller();
    
    private boolean reqReceipts = false, taxReduction = false, recGathered = false, taxPenalty = false, amPerCategory = false, amForCategory = false;
    private int taxCount = 1, TextXML = -1;
    private List<String> selectedTaxps, selectedReceipts;
    private Object selectedTaxp;
    private String category = "1", amountCategory = "1";
    

    /** Creates new form GUI */
    public GUI() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        personal = new javax.swing.JDialog();
        pDetails = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        income = new javax.swing.JTextField();
        VAT = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        submitPersonal = new javax.swing.JButton();
        cancelPersonal = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        fileChooser = new javax.swing.JFileChooser();
        pathChooser = new javax.swing.JFileChooser();
        list = new javax.swing.JDialog();
        jScrollPane1 = new javax.swing.JScrollPane();
        taxList = new javax.swing.JList<>();
        submitList = new javax.swing.JButton();
        cancelList = new javax.swing.JButton();
        list1 = new javax.swing.JDialog();
        jScrollPane2 = new javax.swing.JScrollPane();
        taxList1 = new javax.swing.JList<>();
        submitList1 = new javax.swing.JButton();
        cancelList1 = new javax.swing.JButton();
        receiptDetails = new javax.swing.JDialog();
        rDetails1 = new javax.swing.JPanel();
        amount = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        submitReceipt = new javax.swing.JButton();
        cancelReceipt = new javax.swing.JButton();
        jLabel22 = new javax.swing.JLabel();
        receiptID = new javax.swing.JTextField();
        receiptCategory = new javax.swing.JComboBox<>();
        jLabel23 = new javax.swing.JLabel();
        cAddress = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        cName = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        numOfComp = new javax.swing.JTextField();
        ownerVAT = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        ownerName = new javax.swing.JTextField();
        list2 = new javax.swing.JDialog();
        jScrollPane3 = new javax.swing.JScrollPane();
        taxList2 = new javax.swing.JList<>();
        submitList2 = new javax.swing.JButton();
        cancelList2 = new javax.swing.JButton();
        list3 = new javax.swing.JDialog();
        jScrollPane4 = new javax.swing.JScrollPane();
        taxList3 = new javax.swing.JList<>();
        submitList3 = new javax.swing.JButton();
        cancelList3 = new javax.swing.JButton();
        list4 = new javax.swing.JDialog();
        jScrollPane5 = new javax.swing.JScrollPane();
        taxList4 = new javax.swing.JList<>();
        submitList4 = new javax.swing.JButton();
        cancelList4 = new javax.swing.JButton();
        list5 = new javax.swing.JDialog();
        jScrollPane6 = new javax.swing.JScrollPane();
        taxList5 = new javax.swing.JList<>();
        submitList5 = new javax.swing.JButton();
        cancelList5 = new javax.swing.JButton();
        splitPane = new javax.swing.JSplitPane();
        tabs = new javax.swing.JTabbedPane();
        treeTaxpayer = new javax.swing.JPanel();
        nameTree = new javax.swing.JScrollPane();
        taxpayer = new javax.swing.JTree();
        toolBar1 = new javax.swing.JToolBar();
        addTaxpayer = new javax.swing.JButton();
        deleteTaxpayer = new javax.swing.JButton();
        jSeparator7 = new javax.swing.JToolBar.Separator();
        addReceipt = new javax.swing.JButton();
        deleteReceipt = new javax.swing.JButton();
        jSeparator8 = new javax.swing.JToolBar.Separator();
        totalRequiredReceipts = new javax.swing.JCheckBox();
        addTaxReduction = new javax.swing.JCheckBox();
        totalReceiptsGathered = new javax.swing.JCheckBox();
        addTaxPenalty = new javax.swing.JCheckBox();
        amountPerCategory = new javax.swing.JCheckBox();
        amountForCategory = new javax.swing.JCheckBox();
        jComboBox = new javax.swing.JComboBox<>();
        menu = new javax.swing.JMenuBar();
        file = new javax.swing.JMenu();
        openFile = new javax.swing.JMenuItem();
        jSeparator5 = new javax.swing.JPopupMenu.Separator();
        saveFile = new javax.swing.JMenuItem();
        saveReference = new javax.swing.JMenuItem();
        jSeparator6 = new javax.swing.JPopupMenu.Separator();
        Exit = new javax.swing.JMenuItem();
        Edit = new javax.swing.JMenu();
        textFile = new javax.swing.JRadioButtonMenuItem();
        xmlFile = new javax.swing.JRadioButtonMenuItem();

        personal.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        personal.setTitle("Record");
        personal.setAlwaysOnTop(true);
        personal.setBounds(new java.awt.Rectangle(450, 300, 450, 250));
        personal.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        personal.setMinimumSize(new java.awt.Dimension(400, 250));
        personal.setModal(true);
        personal.setResizable(false);

        pDetails.setBorder(javax.swing.BorderFactory.createTitledBorder("Personal Details"));
        jLabel4.setText("Income              :");
        jLabel1.setText("Name                  :");
        jLabel3.setText("VAT Reg. Num. :");

        submitPersonal.setText("Submit");
        submitPersonal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitPersonalActionPerformed(evt);
            }
        });

        cancelPersonal.setText("Cancel");
        cancelPersonal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelPersonalActionPerformed(evt);
            }
        });

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Group.gif"))); // NOI18N

        javax.swing.GroupLayout pDetailsLayout = new javax.swing.GroupLayout(pDetails);
        pDetails.setLayout(pDetailsLayout);
        pDetailsLayout.setHorizontalGroup(
            pDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pDetailsLayout.createSequentialGroup()
                .addGroup(pDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pDetailsLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addGap(5, 5, 5)
                        .addComponent(name, javax.swing.GroupLayout.DEFAULT_SIZE, 258, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pDetailsLayout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 66, Short.MAX_VALUE)
                        .addComponent(submitPersonal)
                        .addGap(18, 18, 18)
                        .addComponent(cancelPersonal))
                    .addGroup(pDetailsLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(pDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(5, 5, 5)
                        .addGroup(pDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(VAT, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 262, Short.MAX_VALUE)
                            .addComponent(income, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 262, Short.MAX_VALUE))))
                .addContainerGap())
        );
        pDetailsLayout.setVerticalGroup(
            pDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pDetailsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(VAT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(income, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(pDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pDetailsLayout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jLabel5))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pDetailsLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(pDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(submitPersonal)
                            .addComponent(cancelPersonal))
                        .addGap(10, 10, 10))))
        );

        javax.swing.GroupLayout personalLayout = new javax.swing.GroupLayout(personal.getContentPane());
        personal.getContentPane().setLayout(personalLayout);
        personalLayout.setHorizontalGroup(
            personalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(personalLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pDetails, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        personalLayout.setVerticalGroup(
            personalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(personalLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pDetails, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        
        fileChooser.setCurrentDirectory(new java.io.File("test/"));
        fileChooser.setFileFilter(new MyCustomFilter());

        pathChooser.setCurrentDirectory(new java.io.File("output/"));
        pathChooser.setDialogTitle("This is my open dialog");
        pathChooser.setFileSelectionMode(javax.swing.JFileChooser.DIRECTORIES_ONLY);
        pathChooser.setName("pathChooser"); // NOI18N

        list.setTitle("Choose Taxpayers ! ! !");
        list.setBounds(new java.awt.Rectangle(450, 280, 300, 250));
        list.setModal(true);
        list.setResizable(false);

        jScrollPane1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Choose Taxpayers", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        taxList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                taxListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(taxList);

        submitList.setText("Submit");
        submitList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitListActionPerformed(evt);
            }
        });

        cancelList.setText("Cancel");
        cancelList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelListActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout listLayout = new javax.swing.GroupLayout(list.getContentPane());
        list.getContentPane().setLayout(listLayout);
        listLayout.setHorizontalGroup(
            listLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(listLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(submitList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(68, 68, 68)
                .addComponent(cancelList, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)
                .addGap(30, 30, 30))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 256, Short.MAX_VALUE)
        );
        listLayout.setVerticalGroup(
            listLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, listLayout.createSequentialGroup()
                .addComponent(jScrollPane1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(listLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(submitList)
                    .addComponent(cancelList))
                .addContainerGap())
        );

        list1.setTitle("Choose Taxpayers ! ! !");
        list1.setBounds(new java.awt.Rectangle(450, 280, 300, 250));
        list1.setModal(true);
        list1.setResizable(false);

        jScrollPane2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Choose Taxpayers", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        taxList1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        taxList1.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                taxList1ValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(taxList1);

        submitList1.setText("Submit");
        submitList1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitList1ActionPerformed(evt);
            }
        });

        cancelList1.setText("Cancel");
        cancelList1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelList1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout list1Layout = new javax.swing.GroupLayout(list1.getContentPane());
        list1.getContentPane().setLayout(list1Layout);
        list1Layout.setHorizontalGroup(
            list1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(list1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(submitList1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(68, 68, 68)
                .addComponent(cancelList1, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)
                .addGap(30, 30, 30))
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 256, Short.MAX_VALUE)
        );
        list1Layout.setVerticalGroup(
            list1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, list1Layout.createSequentialGroup()
                .addComponent(jScrollPane2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(list1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(submitList1)
                    .addComponent(cancelList1))
                .addContainerGap())
        );

        receiptDetails.setBounds(new java.awt.Rectangle(400, 200, 450, 450));
        receiptDetails.setModal(true);

        rDetails1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Receipt Details", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION));
        jLabel17.setText("Receipt ID            :");
        jLabel21.setText("Amount                 :");

        submitReceipt.setText("Submit");
        submitReceipt.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        submitReceipt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitReceiptActionPerformed(evt);
            }
        });

        cancelReceipt.setText("Cancel");
        cancelReceipt.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        cancelReceipt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelReceiptActionPerformed(evt);
            }
        });

        jLabel22.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/receipt.png"))); // NOI18N

        receiptCategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Category 1", "Category 2", "Category 3", "Category 4", "Category 5", "Category 6", "Category 7", "Category 8"}));
        receiptCategory.setToolTipText("Receipt Category");
        receiptCategory.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        receiptCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                receiptCategoryActionPerformed(evt);
            }
        });

        jLabel23.setText("Receipt Category :");
        jLabel24.setText("Company Name    :");
        jLabel26.setText("Address                :");
        jLabel27.setText("Num of Companies:");
        jLabel28.setText("CompanyOwner   :");
        jLabel29.setText("OwnerVAT num    :");

        javax.swing.GroupLayout rDetails1Layout = new javax.swing.GroupLayout(rDetails1);
        rDetails1.setLayout(rDetails1Layout);
        rDetails1Layout.setHorizontalGroup(
            rDetails1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rDetails1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(rDetails1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, rDetails1Layout.createSequentialGroup()
                        .addComponent(jLabel22)
                        .addGap(175, 175, 175)
                        .addComponent(submitReceipt)
                        .addGap(18, 18, 18)
                        .addComponent(cancelReceipt))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, rDetails1Layout.createSequentialGroup()
                        .addGroup(rDetails1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(rDetails1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(rDetails1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(rDetails1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(rDetails1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(rDetails1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(rDetails1Layout.createSequentialGroup()
                                                    .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                                                    .addGap(10, 10, 10))
                                                .addGroup(rDetails1Layout.createSequentialGroup()
                                                    .addComponent(jLabel17)
                                                    .addGap(12, 12, 12)))
                                            .addGroup(rDetails1Layout.createSequentialGroup()
                                                .addComponent(jLabel24)
                                                .addGap(11, 11, 11)))
                                        .addComponent(jLabel28)
                                        .addComponent(jLabel26))
                                    .addGroup(rDetails1Layout.createSequentialGroup()
                                        .addComponent(jLabel29)
                                        .addGap(14, 14, 14)))
                                .addGroup(rDetails1Layout.createSequentialGroup()
                                    .addComponent(jLabel27)
                                    .addGap(9, 9, 9)))
                            .addGroup(rDetails1Layout.createSequentialGroup()
                                .addComponent(jLabel23)
                                .addGap(11, 11, 11)))
                        .addGroup(rDetails1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(receiptCategory, 0, 272, Short.MAX_VALUE)
                            .addComponent(numOfComp, javax.swing.GroupLayout.DEFAULT_SIZE, 272, Short.MAX_VALUE)
                            .addComponent(ownerVAT, javax.swing.GroupLayout.DEFAULT_SIZE, 272, Short.MAX_VALUE)
                            .addComponent(cAddress, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 272, Short.MAX_VALUE)
                            .addComponent(cName, javax.swing.GroupLayout.DEFAULT_SIZE, 272, Short.MAX_VALUE)
                            .addComponent(receiptID, javax.swing.GroupLayout.DEFAULT_SIZE, 272, Short.MAX_VALUE)
                            .addComponent(amount, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 272, Short.MAX_VALUE)
                            .addComponent(ownerName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 272, Short.MAX_VALUE))))
                .addContainerGap())
        );
        rDetails1Layout.setVerticalGroup(
            rDetails1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rDetails1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(rDetails1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(receiptID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(rDetails1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                    .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(amount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(rDetails1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(rDetails1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                    .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(rDetails1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ownerName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(rDetails1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                    .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ownerVAT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(rDetails1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                    .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(numOfComp, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(rDetails1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(receiptCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(rDetails1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(rDetails1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cancelReceipt)
                        .addComponent(submitReceipt))
                    .addComponent(jLabel22))
                .addContainerGap())
        );

        javax.swing.GroupLayout receiptDetailsLayout = new javax.swing.GroupLayout(receiptDetails.getContentPane());
        receiptDetails.getContentPane().setLayout(receiptDetailsLayout);
        receiptDetailsLayout.setHorizontalGroup(
            receiptDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(receiptDetailsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rDetails1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        receiptDetailsLayout.setVerticalGroup(
            receiptDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(receiptDetailsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rDetails1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        list2.setTitle("Choose Taxpayers ! ! !");
        list2.setBounds(new java.awt.Rectangle(450, 280, 300, 250));
        list2.setModal(true);
        list2.setResizable(false);

        jScrollPane3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Choose Taxpayers", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        taxList2.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                taxList2ValueChanged(evt);
            }
        });
        jScrollPane3.setViewportView(taxList2);

        submitList2.setText("Submit");
        submitList2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitList2ActionPerformed(evt);
            }
        });

        cancelList2.setText("Cancel");
        cancelList2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelList2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout list2Layout = new javax.swing.GroupLayout(list2.getContentPane());
        list2.getContentPane().setLayout(list2Layout);
        list2Layout.setHorizontalGroup(
            list2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(list2Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(submitList2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(68, 68, 68)
                .addComponent(cancelList2, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)
                .addGap(30, 30, 30))
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 256, Short.MAX_VALUE)
        );
        list2Layout.setVerticalGroup(
            list2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, list2Layout.createSequentialGroup()
                .addComponent(jScrollPane3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(list2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(submitList2)
                    .addComponent(cancelList2))
                .addContainerGap())
        );

        list3.setTitle("Choose Taxpayers ! ! !");
        list3.setBounds(new java.awt.Rectangle(450, 280, 300, 250));
        list3.setModal(true);
        list3.setResizable(false);

        jScrollPane4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Choose Taxpayers", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        taxList3.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                taxList3ValueChanged(evt);
            }
        });
        jScrollPane4.setViewportView(taxList3);

        submitList3.setText("Submit");
        submitList3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitList3ActionPerformed(evt);
            }
        });

        cancelList3.setText("Cancel");
        cancelList3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelList3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout list3Layout = new javax.swing.GroupLayout(list3.getContentPane());
        list3.getContentPane().setLayout(list3Layout);
        list3Layout.setHorizontalGroup(
            list3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(list3Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(submitList3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(68, 68, 68)
                .addComponent(cancelList3, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)
                .addGap(30, 30, 30))
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 256, Short.MAX_VALUE)
        );
        list3Layout.setVerticalGroup(
            list3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, list3Layout.createSequentialGroup()
                .addComponent(jScrollPane4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(list3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(submitList3)
                    .addComponent(cancelList3))
                .addContainerGap())
        );

        list4.setTitle("Choose Taxpayers ! ! !");
        list4.setBounds(new java.awt.Rectangle(450, 280, 300, 250));
        list4.setModal(true);
        list4.setResizable(false);

        jScrollPane5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Choose Taxpayers", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        taxList4.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                taxList4ValueChanged(evt);
            }
        });
        jScrollPane5.setViewportView(taxList4);

        submitList4.setText("Submit");
        submitList4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitList4ActionPerformed(evt);
            }
        });

        cancelList4.setText("Cancel");
        cancelList4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelList4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout list4Layout = new javax.swing.GroupLayout(list4.getContentPane());
        list4.getContentPane().setLayout(list4Layout);
        list4Layout.setHorizontalGroup(
            list4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(list4Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(submitList4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(68, 68, 68)
                .addComponent(cancelList4, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)
                .addGap(30, 30, 30))
            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 256, Short.MAX_VALUE)
        );
        list4Layout.setVerticalGroup(
            list4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, list4Layout.createSequentialGroup()
                .addComponent(jScrollPane5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(list4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(submitList4)
                    .addComponent(cancelList4))
                .addContainerGap())
        );

        list5.setTitle("Choose Taxpayers ! ! !");
        list5.setBounds(new java.awt.Rectangle(450, 280, 300, 250));
        list5.setModal(true);
        list5.setResizable(false);

        jScrollPane6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Choose Taxpayers", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        taxList5.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        taxList5.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                taxList5ValueChanged(evt);
            }
        });
        jScrollPane6.setViewportView(taxList5);

        submitList5.setText("Submit");
        submitList5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitList5ActionPerformed(evt);
            }
        });

        cancelList5.setText("Cancel");
        cancelList5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelList5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout list5Layout = new javax.swing.GroupLayout(list5.getContentPane());
        list5.getContentPane().setLayout(list5Layout);
        list5Layout.setHorizontalGroup(
            list5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(list5Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(submitList5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(68, 68, 68)
                .addComponent(cancelList5, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)
                .addGap(30, 30, 30))
            .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 256, Short.MAX_VALUE)
        );
        list5Layout.setVerticalGroup(
            list5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, list5Layout.createSequentialGroup()
                .addComponent(jScrollPane6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(list5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(submitList5)
                    .addComponent(cancelList5))
                .addContainerGap())
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBounds(new java.awt.Rectangle(200, 100, 900, 900));

        tabs.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        splitPane.setRightComponent(tabs);

        renderer1.setOpenIcon(customIconEarth);
        renderer1.setClosedIcon(customIconEarth);
        renderer1.setLeafIcon(customIconPeople);
        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("Taxpayer");
        javax.swing.tree.DefaultMutableTreeNode treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("name");
        treeNode1.add(treeNode2);
        taxpayer.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        taxpayer.setToolTipText("");
        taxpayer.setCellRenderer(renderer1);
        taxpayer.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        taxpayer.setName("taxpayer"); // NOI18N
        taxpayer.setRowHeight(25);
        taxpayer.setToggleClickCount(1);
        taxpayer.setVisibleRowCount(10);
        taxpayer.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                taxpayerValueChanged(evt);
            }
        });
        nameTree.setViewportView(taxpayer);

        javax.swing.GroupLayout treeTaxpayerLayout = new javax.swing.GroupLayout(treeTaxpayer);
        treeTaxpayer.setLayout(treeTaxpayerLayout);
        treeTaxpayerLayout.setHorizontalGroup(
            treeTaxpayerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(nameTree, javax.swing.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE)
        );
        treeTaxpayerLayout.setVerticalGroup(
            treeTaxpayerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(nameTree, javax.swing.GroupLayout.DEFAULT_SIZE, 496, Short.MAX_VALUE)
        );

        splitPane.setLeftComponent(treeTaxpayer);

        toolBar1.setRollover(true);
        toolBar1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        toolBar1.setMinimumSize(new java.awt.Dimension(500, 41));
        toolBar1.setName("Control Buttons"); // NOI18N
        toolBar1.setPreferredSize(new java.awt.Dimension(900, 41));

        addTaxpayer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/add.gif"))); // NOI18N
        addTaxpayer.setFocusable(false);
        addTaxpayer.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        addTaxpayer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addTaxpayerActionPerformed(evt);
            }
        });
        toolBar1.add(addTaxpayer);

        deleteTaxpayer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/delete.gif"))); // NOI18N
        deleteTaxpayer.setFocusable(false);
        deleteTaxpayer.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        deleteTaxpayer.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        deleteTaxpayer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteTaxpayerActionPerformed(evt);
            }
        });
        toolBar1.add(deleteTaxpayer);
        toolBar1.add(jSeparator7);

        addReceipt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/receipt_add.png"))); // NOI18N
        addReceipt.setFocusable(false);
        addReceipt.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        addReceipt.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        addReceipt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addReceiptActionPerformed(evt);
            }
        });
        toolBar1.add(addReceipt);

        deleteReceipt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/receipt_delete.png"))); // NOI18N
        deleteReceipt.setFocusable(false);
        deleteReceipt.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        deleteReceipt.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        deleteReceipt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteReceiptActionPerformed(evt);
            }
        });
        toolBar1.add(deleteReceipt);
        toolBar1.add(jSeparator8);

        totalRequiredReceipts.setFont(new java.awt.Font("Tahoma", 0, 8));
        totalRequiredReceipts.setText("Total Required Receipts");
        totalRequiredReceipts.setFocusable(false);
        totalRequiredReceipts.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        totalRequiredReceipts.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        totalRequiredReceipts.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        totalRequiredReceipts.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                totalRequiredReceiptsItemStateChanged(evt);
            }
        });
        toolBar1.add(totalRequiredReceipts);

        addTaxReduction.setFont(new java.awt.Font("Tahoma", 0, 8));
        addTaxReduction.setText("Additional Tax Reduction");
        addTaxReduction.setFocusable(false);
        addTaxReduction.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        addTaxReduction.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        addTaxReduction.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                addTaxReductionItemStateChanged(evt);
            }
        });
        toolBar1.add(addTaxReduction);

        totalReceiptsGathered.setFont(new java.awt.Font("Tahoma", 0, 8));
        totalReceiptsGathered.setText("Total Receipts Gathered");
        totalReceiptsGathered.setFocusable(false);
        totalReceiptsGathered.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        totalReceiptsGathered.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        totalReceiptsGathered.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                totalReceiptsGatheredItemStateChanged(evt);
            }
        });
        toolBar1.add(totalReceiptsGathered);

        addTaxPenalty.setFont(new java.awt.Font("Tahoma", 0, 8));
        addTaxPenalty.setText("Additional Tax Penalty");
        addTaxPenalty.setFocusable(false);
        addTaxPenalty.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        addTaxPenalty.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        addTaxPenalty.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                addTaxPenaltyItemStateChanged(evt);
            }
        });
        toolBar1.add(addTaxPenalty);

        amountPerCategory.setFont(new java.awt.Font("Tahoma", 0, 8));
        amountPerCategory.setText("Amounts Spent Per Category");
        amountPerCategory.setFocusable(false);
        amountPerCategory.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        amountPerCategory.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        amountPerCategory.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                amountPerCategoryItemStateChanged(evt);
            }
        });
        toolBar1.add(amountPerCategory);

        amountForCategory.setFont(new java.awt.Font("Tahoma", 0, 8));
        amountForCategory.setText("Amounts Spent For Category");
        amountForCategory.setFocusable(false);
        amountForCategory.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        amountForCategory.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        amountForCategory.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                amountForCategoryItemStateChanged(evt);
            }
        });
        toolBar1.add(amountForCategory);

        jComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Category 1", "Category 2", "Category 3", "Category 4", "Category 5", "Category 6", "Category 7", "Category 8" }));
        jComboBox.setPreferredSize(new java.awt.Dimension(50, 10));
        jComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxActionPerformed(evt);
            }
        });
        toolBar1.add(jComboBox);

        file.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Folder.gif"))); // NOI18N
        file.setText("File");

        openFile.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        openFile.setText("Open");
        openFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openFileActionPerformed(evt);
            }
        });
        file.add(openFile);
        file.add(jSeparator5);

        saveFile.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        saveFile.setText("Save");
        saveFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveFileActionPerformed(evt);
            }
        });
        file.add(saveFile);

        saveReference.setText("Save Reference");
        saveReference.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveReferenceActionPerformed(evt);
            }
        });
        file.add(saveReference);
        file.add(jSeparator6);

        Exit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ESCAPE, 0));
        Exit.setText("Exit");
        Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitActionPerformed(evt);
            }
        });
        file.add(Exit);

        menu.add(file);

        Edit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Wrench.gif"))); // NOI18N
        Edit.setText("File Format");

        textFile.setText("Text");
        textFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFileActionPerformed(evt);
            }
        });
        Edit.add(textFile);

        xmlFile.setText("XML");
        xmlFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xmlFileActionPerformed(evt);
            }
        });
        Edit.add(xmlFile);

        menu.add(Edit);
        setJMenuBar(menu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(splitPane, javax.swing.GroupLayout.DEFAULT_SIZE, 903, Short.MAX_VALUE))
                    .addComponent(toolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 913, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(toolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(splitPane, javax.swing.GroupLayout.DEFAULT_SIZE, 498, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void submitPersonalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitPersonalActionPerformed
        if(name.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "\"Name\" field is empty !!!");
        }
        else if(VAT.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "\"VAT Reg. Num\" field is empty !!!");
        }
        else if(income.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "\"Income\" field is empty !!!");
        }
        else {
            String taxp = name.getText();
            String vat = VAT.getText();
            int inc = Integer.parseInt(income.getText());
            boolean check = true;

            String path;

            for(int i =1; i<taxCount; i++) {
                path = taxpayer.getPathForRow(i).toString();

                if(path.contains(taxp)){
                    check = false;
                    break;
                }
            }

            if(check) {
                taxCount++;

                DefaultMutableTreeNode treeNode2 = new DefaultMutableTreeNode(taxp);
                treeNode1.add(treeNode2);
                taxpayer.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
                
                if(taxpayer.getPathForRow(1).toString().contains("name")) {
                    treeNode1.remove(0);
                    taxpayer.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
                }

                one.addTaxpayer(taxp,vat,inc);
            }
            else {
                JOptionPane.showMessageDialog(null,"\"" + taxp + "\" has already been added !");
            }
        }
        clearAndHidePersonal();
    }//GEN-LAST:event_submitPersonalActionPerformed

    private void cancelPersonalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelPersonalActionPerformed
        clearAndHidePersonal();
    }//GEN-LAST:event_cancelPersonalActionPerformed

    private void taxListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_taxListValueChanged
        selectedTaxps = taxList.getSelectedValuesList();
    }//GEN-LAST:event_taxListValueChanged

    private void submitListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitListActionPerformed
        list.setVisible(false);
        int returnVal = pathChooser.showSaveDialog(this);
        
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File fil = pathChooser.getSelectedFile();
            for(int i=0; i<selectedTaxps.size(); i++) {
                String selectedTaxpayer = selectedTaxps.get(i);
                one.saveFile(TextXML, fil, selectedTaxpayer);
            }
        }
        else {
            System.out.println("File access cancelled by user.");
        }
    }//GEN-LAST:event_submitListActionPerformed

    private void cancelListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelListActionPerformed
        list.setVisible(false);
    }//GEN-LAST:event_cancelListActionPerformed

    private void taxList1ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_taxList1ValueChanged
        selectedTaxp = taxList1.getSelectedValue();
    }//GEN-LAST:event_taxList1ValueChanged

    private void submitList1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitList1ActionPerformed
        list1.setVisible(false);
        receiptDetails.setVisible(true);
    }//GEN-LAST:event_submitList1ActionPerformed

    private void cancelList1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelList1ActionPerformed
        list1.setVisible(false);
    }//GEN-LAST:event_cancelList1ActionPerformed

    private void submitReceiptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitReceiptActionPerformed
        if(receiptID.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "\"ReceiptID\" field is empty !!!");
        }
        else if(amount.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "\"Amount\" field is empty !!!");
        }
        else if(cName.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "\"Company Name\" field is empty !!!");
        }
        else if(cAddress.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "\"Company Address\" field is empty !!!");
        }
        else if(ownerName.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "\"Company Owner Name\" field is empty !!!");
        }
        else if(ownerVAT.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "\"CompanyOwnerVAT Reg Num\" field is empty !!!");
        }
        else if(numOfComp.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "\"Number of Companies\" field is empty !!!");
        }
        else {
            int comps = Integer.parseInt(numOfComp.getText());
            int amoun = Integer.parseInt(amount.getText());

            one.addReceipt(selectedTaxp.toString(), receiptID.getText(), category, amoun, cName.getText(), cAddress.getText(), ownerName.getText(), ownerVAT.getText(), comps);
        }

        clearAndHideReceipt();
    }//GEN-LAST:event_submitReceiptActionPerformed

    private void cancelReceiptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelReceiptActionPerformed
        receiptDetails.setVisible(false);
    }//GEN-LAST:event_cancelReceiptActionPerformed

    private void receiptCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_receiptCategoryActionPerformed
        JComboBox<?> cb = (JComboBox<?>)evt.getSource();
        String temp = (String)cb.getSelectedItem();
        String[] temp1 = temp.split(" ",2);
        category = temp1[1];
    }//GEN-LAST:event_receiptCategoryActionPerformed

    private void taxList2ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_taxList2ValueChanged
        selectedTaxps = taxList2.getSelectedValuesList();
    }//GEN-LAST:event_taxList2ValueChanged

    private void submitList2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitList2ActionPerformed
        list2.setVisible(false);
        int returnVal = pathChooser.showSaveDialog(this);
        
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File fil = pathChooser.getSelectedFile();
            
            for(int i=0; i<selectedTaxps.size(); i++) {
                String selectedTaxpayer = selectedTaxps.get(i);
                one.saveReferences(TextXML, fil, selectedTaxpayer);
            }
        }
        else {
            System.out.println("File access cancelled by user.");
        }
    }//GEN-LAST:event_submitList2ActionPerformed

    private void cancelList2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelList2ActionPerformed
        list2.setVisible(false);
    }//GEN-LAST:event_cancelList2ActionPerformed

    private void taxList3ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_taxList3ValueChanged
        selectedTaxps = taxList3.getSelectedValuesList();
    }//GEN-LAST:event_taxList3ValueChanged

    private void submitList3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitList3ActionPerformed
        list3.setVisible(false);
        int check = 0;
        String path1, title, taxp;

        for(int j=0; j<selectedTaxps.size(); j++) {
            taxp = selectedTaxps.get(j);
            
            for(int i =1; i<taxCount; i++) {
                path1 = taxpayer.getPathForRow(i).toString();
                String temp[] = path1.split(",");
                title = temp[1].substring(1, temp[1].length() - 1);

                if(taxp.matches(title)){
                    check = i;
                    break;
                }
            }
            taxCount--;

            if(taxCount == 1) {
                treeNode1.add(new DefaultMutableTreeNode("name"));
                treeNode1.remove(0);
                taxpayer.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
                one.deleteTaxpayer(taxp);
            }
            else {
                treeNode1.remove(check - 1);
                taxpayer.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
                one.deleteTaxpayer(taxp);
            }
        }
    }//GEN-LAST:event_submitList3ActionPerformed

    private void cancelList3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelList3ActionPerformed
        list3.setVisible(false);
    }//GEN-LAST:event_cancelList3ActionPerformed

    private void taxList4ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_taxList4ValueChanged
        selectedReceipts = taxList4.getSelectedValuesList();
    }//GEN-LAST:event_taxList4ValueChanged

    private void submitList4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitList4ActionPerformed
        one.deleteReceipts(selectedTaxp.toString(), selectedReceipts);
        list4.setVisible(false);
    }//GEN-LAST:event_submitList4ActionPerformed

    private void cancelList4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelList4ActionPerformed
        list4.setVisible(false);
    }//GEN-LAST:event_cancelList4ActionPerformed

    private void taxList5ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_taxList5ValueChanged
        selectedTaxp = taxList5.getSelectedValue();
    }//GEN-LAST:event_taxList5ValueChanged

    private void submitList5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitList5ActionPerformed
        list5.setVisible(false);
        String[] ids = one.allIDs(selectedTaxp.toString());
        
        if(!(ids[0].isEmpty())) {
            taxList4.removeAll();
            taxList4.setListData(ids);
            list4.setVisible(true);
        }
        else {
            JOptionPane.showMessageDialog(null, "Receipts is empty !!!");
        }
    }//GEN-LAST:event_submitList5ActionPerformed

    private void cancelList5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelList5ActionPerformed
        list5.setVisible(false);
    }//GEN-LAST:event_cancelList5ActionPerformed

    private void taxpayerValueChanged(javax.swing.event.TreeSelectionEvent evt) {//GEN-FIRST:event_taxpayerValueChanged
        String path = evt.getPath().toString();
        String temp[] = path.split(",");
        String title = temp[1].substring(1, temp[1].length() - 1);

        int curTab = tabs.getTabCount();
        for(int i =0; i<curTab; i++) {
            if(tabs.getTitleAt(i).matches(title)) {
                curTab = i;
                break;
            }
        }

        String taxAFM = one.getTaxAFM(title);
        String taxIncome = one.getTaxIncome(title);

        if(curTab == tabs.getTabCount()) {
            if(!(title.matches("name"))) {
                List<String> dt = new ArrayList<>();
                List<String> column = new ArrayList<>();

                if(reqReceipts) {
                    dt.add(one.getRequiredReceipts(title));
                    column.add("Total Required Receipts");
                }
                if(taxReduction) {
                    dt.add(one.getTaxReduction(title));
                    column.add("Additional Tax Reduction");
                }
                if(recGathered) {
                    dt.add(one.getReceiptsGathered(title));
                    column.add("Total Receipts Gathered");
                }
                if(taxPenalty) {
                    dt.add(one.getTaxPenalty(title));
                    column.add("Additional Tax Penalty");
                }
                if(amPerCategory) {
                    dt.add(one.getAmountForCategory(title,"1"));
                    column.add("Amount Per Category");
                }
                if(amForCategory) {
                    dt.add(one.getAmountForCategory(title,amountCategory));
                    column.add("Additional For Category "+amountCategory);
                }

                String[][] data = new String[8][dt.size()];
                for(int i=0; i<dt.size(); i++) {
                    if(column.get(i).matches("Amount Per Category")) {
                        String[] dat = one.getAmountPerCategory(title);
                        for(int j=0; j<8; j++) {
                            data[j][i] = dat[j];
                        }
                    }
                    else {
                        data[0][i] = dt.get(i);
                    }
                }

                String[] col = new String[column.size()];
                for(int i=0; i<column.size(); i++) {
                    col[i] = column.get(i);
                }

                tabs.add(title, new topPanel(data, col, title, taxAFM, taxIncome));
                tabs.setTabComponentAt(curTab,new ButtonTabComponent(tabs));
                tabs.setSelectedIndex(curTab);
            }
        }
        else {
            tabs.setSelectedIndex(curTab);
        }

        clearCheckButtons();
        //an klikarw 2i fora sto idio child den niwthei to ValueChanged
        taxpayer.setSelectionRow(-1);
    }//GEN-LAST:event_taxpayerValueChanged

    private void openFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openFileActionPerformed
        int returnVal = fileChooser.showOpenDialog(this);
        
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File fil = fileChooser.getSelectedFile();
            one.loadFile(TextXML, fil);

            String[] nodes = one.getTaxpayers();

            for(int i=0; i<nodes.length; i++) {
                boolean check = true;
                String path;

                for(int j =1; j<taxCount; j++) {
                    path = taxpayer.getPathForRow(j).toString();

                    if(path.contains(nodes[i])) {
                        check = false;
                        break;
                    }
                }

                if(check) {
                    taxCount++;

                    DefaultMutableTreeNode treeNode2 = new DefaultMutableTreeNode(nodes[i]);
                    treeNode1.add(treeNode2);
                    taxpayer.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
                    
                    if(taxpayer.getPathForRow(1).toString().contains("name")) {
                        treeNode1.remove(0);
                        taxpayer.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
                    }
                }
            }
        }
        else {
            System.out.println("File access cancelled by user.");
        }
    }//GEN-LAST:event_openFileActionPerformed

    private void saveFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveFileActionPerformed
        int size = one.getTaxpayers().length;
        
        if(size != 0) {
            taxList.removeAll();
            taxList.setListData(one.getTaxpayers());
            list.setVisible(true);
        }
        else {
            JOptionPane.showMessageDialog(null, "Taxpayers tree is empty !!!");
        }
    }//GEN-LAST:event_saveFileActionPerformed

    private void saveReferenceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveReferenceActionPerformed
        int size = one.getTaxpayers().length;
        
        if(size != 0) {
            taxList2.removeAll();
            taxList2.setListData(one.getTaxpayers());
            list2.setVisible(true);
        }
        else {
            JOptionPane.showMessageDialog(null, "Taxpayers tree is empty !!!");
        }
    }//GEN-LAST:event_saveReferenceActionPerformed

    private void ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_ExitActionPerformed

    private void textFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFileActionPerformed
        TextXML = 1;
    }//GEN-LAST:event_textFileActionPerformed

    private void xmlFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xmlFileActionPerformed
        TextXML = 2;
    }//GEN-LAST:event_xmlFileActionPerformed

    private void addTaxpayerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addTaxpayerActionPerformed
        personal.setVisible(true);
    }//GEN-LAST:event_addTaxpayerActionPerformed

    private void deleteTaxpayerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteTaxpayerActionPerformed
        int size = one.getTaxpayers().length;
        
        if(size != 0) {
            taxList3.removeAll();
            taxList3.setListData(one.getTaxpayers());
            list3.setVisible(true);
        }
        else {
            JOptionPane.showMessageDialog(null, "Taxpayers tree is empty !!!");
        }
    }//GEN-LAST:event_deleteTaxpayerActionPerformed

    private void addReceiptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addReceiptActionPerformed
        int size = one.getTaxpayers().length;
        
        if(size != 0) {
            taxList1.removeAll();
            taxList1.setListData(one.getTaxpayers());
            list1.setVisible(true);
        }
        else {
            JOptionPane.showMessageDialog(null, "Taxpayers tree is empty !!!");
        }
    }//GEN-LAST:event_addReceiptActionPerformed

    private void deleteReceiptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteReceiptActionPerformed
        int size = one.getTaxpayers().length;
        
        if(size != 0) {
            taxList5.removeAll();
            taxList5.setListData(one.getTaxpayers());
            list5.setVisible(true);
        }
        else {
            JOptionPane.showMessageDialog(null, "Taxpayers tree is empty !!!");
        }
    }//GEN-LAST:event_deleteReceiptActionPerformed

    private void totalRequiredReceiptsItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_totalRequiredReceiptsItemStateChanged
    	taxReduction = evt.getStateChange() == ItemEvent.SELECTED;
    }//GEN-LAST:event_totalRequiredReceiptsItemStateChanged

    private void addTaxReductionItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_addTaxReductionItemStateChanged
    	taxReduction = evt.getStateChange() == ItemEvent.SELECTED;
    }//GEN-LAST:event_addTaxReductionItemStateChanged

    private void totalReceiptsGatheredItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_totalReceiptsGatheredItemStateChanged
    	recGathered = evt.getStateChange() == ItemEvent.SELECTED;
    }//GEN-LAST:event_totalReceiptsGatheredItemStateChanged

    private void addTaxPenaltyItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_addTaxPenaltyItemStateChanged
    	taxPenalty = evt.getStateChange() == ItemEvent.SELECTED;
    }//GEN-LAST:event_addTaxPenaltyItemStateChanged

    private void amountPerCategoryItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_amountPerCategoryItemStateChanged
    	amPerCategory = evt.getStateChange() == ItemEvent.SELECTED;
    }//GEN-LAST:event_amountPerCategoryItemStateChanged

    private void amountForCategoryItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_amountForCategoryItemStateChanged
    	amForCategory = evt.getStateChange() == ItemEvent.SELECTED;
    }//GEN-LAST:event_amountForCategoryItemStateChanged

    private void jComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxActionPerformed
        JComboBox<?> cb = (JComboBox<?>)evt.getSource();
        String temp = cb.getSelectedItem().toString();
        String[] temp1 = temp.split(" ", 2);
        amountCategory = temp1[1];
    }//GEN-LAST:event_jComboBoxActionPerformed

    private void clearAndHidePersonal() {
        name.setText(null);
        VAT.setText(null);
        income.setText(null);
        personal.setVisible(false);
    }

    private void clearAndHideReceipt() {
        numOfComp.setText(null);
        ownerVAT.setText(null);
        ownerName.setText(null);
        cAddress.setText(null);
        amount.setText(null);
        cName.setText(null);
        receiptID.setText(null);
        receiptDetails.setVisible(false);
    }

    private void clearCheckButtons() {
        reqReceipts = false;
        taxReduction = false;
        recGathered = false;
        taxPenalty = false;
        amPerCategory = false;
        amForCategory = false;
        totalRequiredReceipts.setSelected(false);
        addTaxReduction.setSelected(false);
        totalReceiptsGathered.setSelected(false);
        addTaxPenalty.setSelected(false);
        amountPerCategory.setSelected(false);
        amountForCategory.setSelected(false);
    }

    class MyCustomFilter extends javax.swing.filechooser.FileFilter {

        @Override
        public boolean accept(File file) {
            return file.isDirectory() || file.getAbsolutePath().endsWith(".txt") || file.getAbsolutePath().endsWith(".xml");
        }

        @Override
        public String getDescription() {
            return "Text documents (*.txt)";
        }
    }


    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu Edit;
    private javax.swing.JMenuItem Exit;
    private javax.swing.JTextField VAT;
    private javax.swing.JButton addReceipt;
    private javax.swing.JCheckBox addTaxPenalty;
    private javax.swing.JCheckBox addTaxReduction;
    private javax.swing.JButton addTaxpayer;
    private javax.swing.JTextField amount;
    private javax.swing.JCheckBox amountForCategory;
    private javax.swing.JCheckBox amountPerCategory;
    private javax.swing.JTextField cAddress;
    private javax.swing.JTextField cName;
    private javax.swing.JButton cancelList;
    private javax.swing.JButton cancelList1;
    private javax.swing.JButton cancelList2;
    private javax.swing.JButton cancelList3;
    private javax.swing.JButton cancelList4;
    private javax.swing.JButton cancelList5;
    private javax.swing.JButton cancelPersonal;
    private javax.swing.JButton cancelReceipt;
    private javax.swing.JButton deleteReceipt;
    private javax.swing.JButton deleteTaxpayer;
    private javax.swing.JMenu file;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JTextField income;
    private javax.swing.JComboBox<String> jComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JPopupMenu.Separator jSeparator5;
    private javax.swing.JPopupMenu.Separator jSeparator6;
    private javax.swing.JToolBar.Separator jSeparator7;
    private javax.swing.JToolBar.Separator jSeparator8;
    private javax.swing.JDialog list;
    private javax.swing.JDialog list1;
    private javax.swing.JDialog list2;
    private javax.swing.JDialog list3;
    private javax.swing.JDialog list4;
    private javax.swing.JDialog list5;
    private javax.swing.JMenuBar menu;
    private javax.swing.JTextField name;
    private javax.swing.JScrollPane nameTree;
    private javax.swing.JTextField numOfComp;
    private javax.swing.JMenuItem openFile;
    private javax.swing.JTextField ownerName;
    private javax.swing.JTextField ownerVAT;
    private javax.swing.JPanel pDetails;
    private javax.swing.JFileChooser pathChooser;
    private javax.swing.JDialog personal;
    private javax.swing.JPanel rDetails1;
    private javax.swing.JComboBox<String> receiptCategory;
    private javax.swing.JDialog receiptDetails;
    private javax.swing.JTextField receiptID;
    private javax.swing.JMenuItem saveFile;
    private javax.swing.JMenuItem saveReference;
    private javax.swing.JSplitPane splitPane;
    private javax.swing.JButton submitList;
    private javax.swing.JButton submitList1;
    private javax.swing.JButton submitList2;
    private javax.swing.JButton submitList3;
    private javax.swing.JButton submitList4;
    private javax.swing.JButton submitList5;
    private javax.swing.JButton submitPersonal;
    private javax.swing.JButton submitReceipt;
    private javax.swing.JTabbedPane tabs;
    private javax.swing.JList<String> taxList;
    private javax.swing.JList<String> taxList1;
    private javax.swing.JList<String> taxList2;
    private javax.swing.JList<String> taxList3;
    private javax.swing.JList<String> taxList4;
    private javax.swing.JList<String> taxList5;
    private javax.swing.JTree taxpayer;
    private javax.swing.JRadioButtonMenuItem textFile;
    private javax.swing.JToolBar toolBar1;
    private javax.swing.JCheckBox totalReceiptsGathered;
    private javax.swing.JCheckBox totalRequiredReceipts;
    private javax.swing.JPanel treeTaxpayer;
    private javax.swing.JRadioButtonMenuItem xmlFile;
    // End of variables declaration//GEN-END:variables

}
